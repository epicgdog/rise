  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module dubhe::dapp_key {

  use std::type_name;

  use sui::address;

  use std::ascii::String;

  /// Authorization token for the app.

  public struct DappKey has copy, drop {}

  public(package) fun new(): DappKey {
    DappKey {  }
  }

  public fun to_string(): String {
    type_name::get<DappKey>().into_string()
  }

  public fun package_id(): address {
    let package_id_str = type_name::get<DappKey>().get_address();
    address::from_ascii_bytes(package_id_str.as_bytes())
  }

  public fun eq<DappKey1: copy + drop, DappKey2: copy + drop>(_: &DappKey1, _: &DappKey2): bool {
    type_name::get<DappKey1>() == type_name::get<DappKey2>()
  }
}
