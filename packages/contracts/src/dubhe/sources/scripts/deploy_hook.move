  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module dubhe::deploy_hook {

  use dubhe::dapp_service::DappHub;
  use dubhe::dubhe_config;
  use dubhe::dubhe_asset_id;
  use dubhe::wrapper_system;
  use sui::sui::SUI;
  use dubhe::dapp_fee_config;
  use std::ascii::{string, String};
  use dubhe::sui_asset_id;
  use dubhe::dapp_metadata;
  use dubhe::dapp_key;
  use dubhe::dapp_key::DappKey;
  use dubhe::type_info;

  public(package) fun run(dapp_hub: &mut DappHub, ctx: &mut TxContext) {
    dapp_metadata::set(
      dapp_hub, 
      dapp_key::to_string(), 
      string(b"Dubhe Protocol"), 
      string(b"Dubhe Protocol"), 
      string(b"https://dubhe-website-web.vercel.app/"), 
      vector::empty(), 
      vector::empty(), 
      vector[type_info::get_package_id<DappKey>()], 
      1691616010009, 
      ctx.sender(), 
      1, 
      false
    );

    let next_asset_id = 0;
      // 0.3% swap fee
    let swap_fee = 30;
    let fee_to = ctx.sender();
    let max_swap_path_len = 6;
    dubhe_config::set(
      dapp_hub, 
      next_asset_id, 
      swap_fee, 
      fee_to, 
      max_swap_path_len,
      ctx.sender()
    );

    // set free credit
    let free_credit = 10 * 1000000000;
    let base_fee = 80000;
    let byte_fee = 500;
    dapp_fee_config::set(dapp_hub, free_credit, base_fee, byte_fee);

    let sui_asset_id = wrapper_system::do_register<SUI>(
      dapp_hub,
      string(b"Wrapped SUI"),
      string(b"wSUI"),
      string(b"Wrapped SUI"),
      9,
      string(b"https://cryptologos.cc/logos/sui-sui-logo.png?v=040"),
    );
    sui_asset_id::set(dapp_hub, sui_asset_id);
  }
}
